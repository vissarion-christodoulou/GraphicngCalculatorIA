#BlueJ class context
comment0.target=Main
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment10.params=vbxFunctions\ pdf
comment10.target=void\ btnExeClicked(javafx.scene.layout.VBox,\ org.apache.pdfbox.pdmodel.PDDocument)
comment11.params=rfunctions\ pdf
comment11.target=void\ execute(RangedFunction[],\ org.apache.pdfbox.pdmodel.PDDocument)
comment12.params=spGraph\ pdf
comment12.target=void\ btnSaveFunctionClicked(javafx.scene.control.ScrollPane,\ org.apache.pdfbox.pdmodel.PDDocument)
comment13.params=
comment13.target=void\ email()
comment14.params=
comment14.target=javax.mail.PasswordAuthentication\ getPasswordAuthentication()
comment15.params=vbxGraph\ rfunctions\ process
comment15.target=void\ chooseFunction(javafx.scene.layout.VBox,\ RangedFunction[],\ java.lang.String)
comment16.params=vbxGraph\ rfunctions\ index
comment16.target=void\ choose2ndFunction(javafx.scene.layout.VBox,\ RangedFunction[],\ int)
comment16.text=\r\nchoose\ a\ second\ function\ if\ we\ are\ looking\ for\ the\ intersection\r\nof\ the\ graph\ of\ two\ functions\r\n
comment17.params=vbxGraph\ rfunction\ process
comment17.target=void\ getX(javafx.scene.layout.VBox,\ RangedFunction,\ java.lang.String)
comment17.text=we\ can\ calculate\ the\ derivative\ of\ a\ function\ or\ its\ y-value,\ given\ an\ x-input\r\nthis\ method\ gets\ this\ x-value-input\ from\ the\ user\r\n
comment18.params=vbxGraph\ rfunction
comment18.target=void\ btnMaxClicked(javafx.scene.layout.VBox,\ RangedFunction)
comment19.params=vbxGraph\ rfunction
comment19.target=void\ btnMinClicked(javafx.scene.layout.VBox,\ RangedFunction)
comment2.params=dumpStg
comment2.target=void\ start(javafx.stage.Stage)
comment2.text=this\ function\ runs\ in\ the\ beggining\ of\ the\ program\r\nit\ displays\ the\ initial\ window\r\nwhich\ contains\ a\ label,\ an\ image\ and\ two\ buttons\r\nit\ also\ retrieves\ all\ the\ data\ that\ the\ program\ needs\r\nand\ places\ it\ in\ variables\ available\ to\ the\ whole\ program\r\n
comment20.params=vbxGraph\ rfunction\ x0
comment20.target=void\ btnCalcYClicked(javafx.scene.layout.VBox,\ RangedFunction,\ java.lang.String)
comment21.params=vbxGraph\ rfunction
comment21.target=void\ btnYInterceptClicked(javafx.scene.layout.VBox,\ RangedFunction)
comment22.params=vbxGraph\ rfunction
comment22.target=void\ btnRootsClicked(javafx.scene.layout.VBox,\ RangedFunction)
comment23.params=vbxGraph\ rfunction\ x0
comment23.target=void\ btnDerivativeClicked(javafx.scene.layout.VBox,\ RangedFunction,\ java.lang.String)
comment24.params=vbxGraph\ rfunction
comment24.target=void\ btnAreaUnderClicked(javafx.scene.layout.VBox,\ RangedFunction)
comment25.params=vbxGraph\ rfunction
comment25.target=void\ btnAreaBetweenClicked(javafx.scene.layout.VBox,\ RangedFunction)
comment25.text=find\ the\ area\ between\ the\ graph\ of\ a\ given\ function\ and\ the\ x-axis\r\nthis\ is\ different\ from\ what\ the\ previous\ method\ does\r\nas\ it\ only\ takes\ positive\ values\ \r\n
comment26.params=vbxGraph\ rfunction
comment26.target=void\ btnVolumeClicked(javafx.scene.layout.VBox,\ RangedFunction)
comment27.params=vbxGraph\ f1\ f2
comment27.target=void\ btnIntersectionClicked(javafx.scene.layout.VBox,\ RangedFunction,\ RangedFunction)
comment28.params=className
comment28.target=void\ btnStudentsClicked(java.lang.String)
comment29.params=clName\ name\ emailAddress
comment29.target=void\ btnDeleteStudentClicked(java.lang.String,\ java.lang.String,\ java.lang.String)
comment3.params=
comment3.target=void\ readClasses()
comment30.params=clName
comment30.target=void\ btnAddStudentClicked(java.lang.String)
comment31.params=clName\ name\ email
comment31.target=void\ btnDoneAddingStudentClicked(java.lang.String,\ java.lang.String,\ java.lang.String)
comment32.params=className
comment32.target=void\ btnDeleteClassClicked(java.lang.String)
comment33.params=
comment33.target=void\ btnAddClicked()
comment34.params=name
comment34.target=void\ btnDoneAddingClicked(java.lang.String)
comment35.params=err\ prev
comment35.target=void\ throwError(java.lang.String,\ javafx.stage.Stage)
comment35.text=Error\ window\ that\ displays\ error\ passed\ in\ as\ argument\r\nprev\ is\ the\ stage\ that\ the\ program\ should\ return\ to\ after\ the\ error\r\nhas\ been\ read\ by\ the\ user\r\n
comment36.params=
comment36.target=void\ saveClasses()
comment4.params=
comment4.target=void\ btnClassesClicked()
comment5.params=isEmail
comment5.target=void\ chooseClass(boolean)
comment5.text=choose\ class\ either\ to\ send\ a\ file\ from\ the\ computer\r\nor\ to\ start\ a\ new\ session(graphs-saving\ to\ pdf-sending\ via\ email)\r\nthe\ value\ of\ the\ boolean\ isEmail\ determines\ which\ line\ will\ be\ followed\r\n
comment6.params=
comment6.target=javax.mail.PasswordAuthentication\ getPasswordAuthentication()
comment7.params=
comment7.target=void\ getFunctions()
comment8.params=vbxFunctions
comment8.target=void\ btnAddFunctionClicked(javafx.scene.layout.VBox)
comment9.params=vbxFunctions\ deleteIndex
comment9.target=void\ btnDeleteFunctionClicked(javafx.scene.layout.VBox,\ int)
numComments=37
